/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#undef ZMK_BEHAVIORS_KEEP_ALL

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define NAV_L 1
#define OTHER_L 2
#define NUM_L 3
#define SYM_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick-tap-ms = <200>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        game {
            bindings = <&to 5>;
            key-positions = <30 31 32 33>;
            layers = <0>;
        };

        exit {
            bindings = <&to 0>;
            key-positions = <29 19>;
            layers = <5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W           &kp E           &kp R        &kp T        &kp Y        &kp U        &kp I            &kp O            &kp P
&hm LEFT_CONTROL A  &hm LEFT_WIN S  &hm LEFT_ALT D  &hm LSHFT F  &kp G        &kp H        &hm RSHFT J  &hm RIGHT_ALT K  &hm RIGHT_WIN L  &hm RIGHT_CONTROL SQT
&kp Z               &kp X           &kp C           &kp V        &kp B        &kp N        &kp M        &kp COMMA        &kp DOT          &kp FSLH
                                                    &lt 1 TAB    &kp SPACE    &lt 3 ENTER  &lt 4 BSPC
            >;
        };

        nav_layer {
            bindings = <
&bt BT_CLR  &bt BT_NXT  &bt BT_PRV  &trans  &trans    &trans   &trans    &kp UP_ARROW  &trans     &trans
&trans      &trans      &trans      &trans  &trans    &trans   &kp LEFT  &kp DOWN      &kp RIGHT  &trans
&trans      &trans      &trans      &trans  &trans    &trans   &kp HOME  &kp PG_DN     &kp PG_UP  &kp END
                                    &trans  &trans    &kp ESC  &kp DEL
            >;
        };

        other_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &kp HOME  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };

        num_layer {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5      &trans  &trans  &trans  &trans  &trans
&kp NUMBER_6  &kp N7        &kp N8        &kp N9        &kp N0      &trans  &trans  &trans  &trans  &trans
&kp GRAVE     &kp MINUS     &kp EQUAL     &kp SEMI      &kp BSLH    &trans  &trans  &trans  &trans  &trans
                                          &trans        &trans      &trans  &trans
            >;
        };

        f_layer {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };

        game {
            bindings = <
&hm LEFT_WIN ESCAPE  &kp Q  &kp W  &kp E    &kp R        &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT       &kp A  &kp S  &kp D    &kp F        &trans  &trans  &trans  &trans  &trans
&kp LEFT_CONTROL     &kp Z  &kp X  &kp C    &kp V        &trans  &trans  &trans  &trans  &trans
                                   &kp TAB  &kp SPACE    &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };
    };
};
